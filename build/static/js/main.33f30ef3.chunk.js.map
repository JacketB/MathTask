{"version":3,"sources":["Components/Header/Header.jsx","Components/Navigation/Navbar.jsx","Components/Profile/Profile.jsx","Components/Home/Homepage.jsx","Components/Task/TaskPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Navbar","href","action","type","placeholder","Profile","keyField","data","id","name","columns","datafield","text","cellEdit","cellEditFactory","mode","Homepage","Task","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAIeA,EAHA,WACb,OAAO,qBAAKC,UAAU,SAAf,qBC2BMC,G,MA5BA,WACb,OACE,sBAAKD,UAAU,MAAf,UACE,gCACE,qBAAKA,UAAU,WAAf,SACE,mBAAGE,KAAK,IAAR,0DAEF,qBAAKF,UAAU,WAAf,SACE,mBAAGE,KAAK,WAAR,0DAEF,qBAAKF,UAAU,WAAf,SACE,mBAAGE,KAAK,QAAR,uDAGJ,sBAAKF,UAAU,OAAf,uFAEE,uBAAMG,OAAO,GAAb,UACE,uBACEC,KAAK,OACLJ,UAAU,8CACVK,YAAY,oFAEd,uD,0CCuBKC,EAzCC,WAsBd,OACE,8BACE,sBAAKN,UAAU,OAAf,UACE,8BACE,sDAEF,gCACE,+FACA,cAAC,IAAD,CACEO,SAAS,KACTC,KAhBO,CACf,CACEC,GAAI,EACJC,KAAM,QAcAC,QAhCM,CACd,CACEC,UAAW,KACXC,KAAM,MAER,CACED,UAAW,OACXC,KAAM,yFAER,CACED,UAAW,UACXC,KAAM,oFAsBAC,SAAUC,IAAgB,CAAEC,KAAM,qBC/B/BC,EAPE,WACf,OACE,8BACE,qBAAKjB,UAAU,OAAf,yBCISkB,EAPF,WACX,OACE,8BACE,qBAAKlB,UAAU,OAAf,0BCsBSmB,MAhBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKnB,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACE,cAAC,IAAD,CAAOoB,KAAK,IAAIC,OAAO,EAAMC,UAAWL,IACxC,cAAC,IAAD,CAAOG,KAAK,WAAWE,UAAWhB,IAClC,cAAC,IAAD,CAAOc,KAAK,QAAQE,UAAWJ,aCP1BK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33f30ef3.chunk.js","sourcesContent":["import { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nconst Header = () => {\r\n  return <div className=\"header\">Header</div>;\r\n};\r\nexport default Header;\r\n","import \"../style.css\";\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <div>\r\n        <div className=\"nav-item\">\r\n          <a href=\"/\">Главная</a>\r\n        </div>\r\n        <div className=\"nav-item\">\r\n          <a href=\"/profile\">Профиль</a>\r\n        </div>\r\n        <div className=\"nav-item\">\r\n          <a href=\"/task\">Задачи</a>\r\n        </div>\r\n      </div>\r\n      <div className=\"comp\">\r\n        Поиск по сайту\r\n        <form action=\"\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"p-1 bg-gray-200 rounded border border-black\"\r\n            placeholder=\"ключевое слово\"\r\n          />\r\n          <button>⌕</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\r\nimport \"../style.css\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\n\r\nconst Profile = () => {\r\n  const collums = [\r\n    {\r\n      datafield: \"id\",\r\n      text: \"id\",\r\n    },\r\n    {\r\n      datafield: \"name\",\r\n      text: \"название задачи\",\r\n    },\r\n    {\r\n      datafield: \"raiting\",\r\n      text: \"рейтинг задачи\",\r\n    },\r\n  ];\r\n\r\n  const products = [\r\n    {\r\n      id: 1,\r\n      name: \"aaa\",\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"comp\">\r\n        <div>\r\n          <h1>Имя</h1>\r\n        </div>\r\n        <div>\r\n          <h2>Ваши задачи</h2>\r\n          <BootstrapTable\r\n            keyField=\"id\"\r\n            data={products}\r\n            columns={collums}\r\n            cellEdit={cellEditFactory({ mode: \"click\" })}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import \"../style.css\";\r\nconst Homepage = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"comp\">Homepage</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Homepage;\r\n","import \"../style.css\";\r\nconst Task = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"comp\">Task page</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Task;\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./Components/Header/Header\";\nimport Navbar from \"./Components/Navigation/Navbar\";\nimport Profile from \"./Components/Profile/Profile\";\nimport Homepage from \"./Components/Home/Homepage\";\nimport Task from \"./Components/Task/TaskPage\";\nimport Login from \"./Components/Auth/LoginPage\";\nimport Register from \"./Components/Auth/RegisterPage\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"wrapper\">\n        <Header />\n        <Navbar />\n        <div className=\"content\">\n          <Route path=\"/\" exact={true} component={Homepage} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route path=\"/task\" component={Task} />\n        </div>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}